services:
  analysis-ru:
    image: tobiaswaslowski/grammr-morphology:0.5.0
#    build:
#      context: ../microservice/morphology
#      dockerfile: docker/Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/health" ]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - "8010:8000"
    environment:
      - SPACY_MODEL=ru_core_news_sm

  analysis-de:
    image: tobiaswaslowski/grammr-morphology:0.5.0
#    build:
#      context: ../microservice/morphology
#      dockerfile: docker/Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/health" ]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - "8011:8000"
    environment:
      - SPACY_MODEL=de_core_news_sm

  inflection-ru:
    image: tobiaswaslowski/grammr-inflection-ru:0.2.1
#    build:
#      context: ../microservice/inflection-ru
#      dockerfile: docker/Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/health" ]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - "8020:8000"

  anki:
    image: tobiaswaslowski/grammr-anki-exporter:0.3.1
#    build:
#      context: ../microservice/anki-exporter
#      dockerfile: docker/Dockerfile
    healthcheck:
      test: [ "CMD", "curl", "--fail", "http://localhost:8000/health" ]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - "8030:8000"

  postgresql:
    image: postgres:17
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: grammr
    healthcheck:
      test: [ "CMD", "psql", "postgresql://user:password@localhost:5432/grammr", "-c", "select 1;" ]
      interval: 5s
      timeout: 5s
      retries: 3
    command: [ "postgres", "-c", "log_statement=all" ]

  mockserver:
    image: mockserver/mockserver
    ports:
      - "1080:1080"
    environment:
      - MOCKSERVER_LIVENESS_HTTP_GET_PATH="/status"
