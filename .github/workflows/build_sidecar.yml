on:
  workflow_call:
    inputs:
      image_name:
        required: true
        type: string
      directory:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
          required: true
      DOCKERHUB_TOKEN:
          required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12'

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies
        run: cd ${{ inputs.directory }} && poetry install --with dev --no-root

      - name: Run tests
        env:
          PYTHONPATH: .
        run: cd ${{ inputs.directory }} && poetry run pytest test/

  build_morphology_sidecar:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Derive and store version
        id: version
        run: |
          echo "VERSION=$(cd ${{ inputs.directory }} && poetry version -s)" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.directory }}
          file:  ${{ inputs.directory }}/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ inputs.image_name }}:${{ env.VERSION }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
