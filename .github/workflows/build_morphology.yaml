name: Build morphology image

on:
  push:
    branches: [ main ]
    paths:
      - 'microservice/morphology/**'
      - '.github/workflows/build_morphology.yaml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Derive poetry version
        id: version
        working-directory: ./microservice/morphology
        run: |
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push generic image
        uses: docker/build-push-action@v5
        with:
          context: microservice/morphology
          file: microservice/morphology/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: grammrapp/morphology:${{ steps.version.outputs.version }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push prebuilt image
        uses: docker/build-push-action@v5
        with:
          context: microservice/morphology
          file: microservice/morphology/docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: grammrapp/morphology:${{ steps.version.outputs.version }}-prebuilt_ru_core_news_lg
          labels: ${{ steps.docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            PREBUILD_MODEL_NAME=ru_core_news_lg
