name: Build and deploy Core
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    paths:
      - src/**
      - terraform/application/**
      - pom.xml
      - Dockerfile
      - .github/workflows/deploy_core.yml

jobs:
  compile-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
          cache: maven

      - name: Unit tests
        run: task unit-test

      - name: Upload jar artifact
        uses: actions/upload-artifact@v4
        with:
          name: grammr-core-jar
          path: target/grammr-core-1.0-SNAPSHOT.jar

  integration-test:
    name: Integration tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Task
        uses: arduino/setup-task@v2

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: corretto
          cache: maven

      - name: Run integration tests
        run: task integration-test

  build-grammr-core:
    name: Build grammr-core Docker image
    runs-on: ubuntu-latest
    needs: [compile-and-test, integration-test]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: grammr-core-jar
          path: target/

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: tobiaswaslowski/grammr-core
          flavor: |
            latest=true
          tags: |
            type=semver,pattern={{version}}
            type=sha,format=long

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-dev:
    name: Deploy to dev environment
    runs-on: arc-runner-grammr
    needs: [ build-grammr-core ]
    concurrency: deploy-dev
    environment: dev
    env:
      TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # required for setup-terraform on self-hosted runners: https://github.com/hashicorp/setup-terraform/issues/84
      - uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.1

      - name: Deploy Terraform
        working-directory: terraform/application
        run: |
          terraform init -backend-config=config/backend/ci.dev.hcl
          terraform apply -auto-approve -var-file=config/dev.tfvars

  deploy-swagger:
    runs-on: ubuntu-latest
    needs: [ deploy-dev ]
    name: Deploy Swagger UI to Github Pages
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Build and run Spring Boot app
        run: |
          docker compose -f local/docker-compose.yaml up postgresql -d
          ./mvnw clean package -DskipTests
          OPENAI_API_KEY=some-test-key mvn spring-boot:start -Dspring-boot.run.profiles=local

      - name: Fetch OpenAPI spec
        run: |
          curl http://localhost:8080/v3/api-docs > openapi.json

      - name: Kill Spring Boot app
        run: |
          mvn spring-boot:stop

      - name: Generate Swagger UI
        run: |
          mkdir swagger-ui
          curl -L https://github.com/swagger-api/swagger-ui/archive/refs/heads/master.zip -o swagger-ui.zip
          unzip swagger-ui.zip
          mv swagger-ui-master/dist/* swagger-ui/
          cp openapi.json swagger-ui/
          sed -i 's|https://petstore.swagger.io/v2/swagger.json|openapi.json|g' swagger-ui/swagger-initializer.js

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./swagger-ui

  deploy-prod:
    name: Deploy to prod environment
    runs-on: arc-runner-grammr
    needs: [ deploy-dev ]
    environment: prod
    concurrency: deploy-prod
    env:
      TF_VAR_openai_api_key: ${{ secrets.OPENAI_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.1

      - name: Deploy Terraform
        working-directory: terraform/application
        run: |
          terraform init -backend-config=config/backend/ci.prod.hcl
          terraform apply -auto-approve -var-file=config/prod.tfvars